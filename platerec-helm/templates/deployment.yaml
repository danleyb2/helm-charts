apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "platerec-helm.fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "platerec-helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "platerec-helm.selectorLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  strategy: {{ toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}    
  template:
    metadata:
      labels:
        {{- include "platerec-helm.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "platerec-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes: 
        - name: license-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "platerec-helm.pvc.claimname" .) }}  
        {{- else }}
          emptyDir: {}
        {{- end }}      
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "TOKEN"
              valueFrom:
                secretKeyRef:
                  key: TOKEN
                  name: {{ include "platerec-helm.fullname" . }}-auth
            - name: "LICENSE_KEY"
              valueFrom:
                secretKeyRef:
                  key: LICENSE_KEY
                  name: {{ include "platerec-helm.fullname" . }}-auth      
                 
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-live
              containerPort: 8081
              protocol: TCP  
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 60
          volumeMounts:
            - mountPath: /license
              name: license-data    
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}

      
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
